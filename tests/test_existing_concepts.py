#!/usr/bin/env python3
"""Í∏∞Ï°¥ concepts Îç∞Ïù¥ÌÑ∞Î°ú Neo4j Îß§Ìïë ÌÖåÏä§Ìä∏"""

import os
from pymongo import MongoClient

def test_existing_concepts():
    try:
        print("=== Í∏∞Ï°¥ concepts Îç∞Ïù¥ÌÑ∞Î°ú Neo4j Îß§Ìïë ÌÖåÏä§Ìä∏ ===")
        
        # .env ÌååÏùºÏóêÏÑú MongoDB URI ÏùΩÍ∏∞
        env_path = os.path.join(os.path.dirname(__file__), 'AI', '.env')
        mongodb_uri = None
        
        with open(env_path, 'r', encoding='utf-8') as f:
            for line in f:
                if line.startswith('MONGODB_URI='):
                    mongodb_uri = line.strip().split('=', 1)[1]
                    break
        
        if mongodb_uri:
            client = MongoClient(mongodb_uri)
            db = client['nerdmath']
            
            print("üîç Í∏∞Ï°¥ concepts Ïª¨Î†âÏÖòÏùò Î™®Îì† Í∞úÎÖê ÌôïÏù∏:")
            concepts = list(db.concepts.find())
            
            for concept in concepts:
                unit_code = concept.get('unitCode')
                unit_title = concept.get('unitTitle')
                concept_id = concept.get('conceptId')
                print(f"   üìÑ {unit_code}: {unit_title} (ID: {concept_id})")
            
            print(f"\nüéØ Neo4j Îß§Ìïë Í∞ÄÎä•Ìïú Í∞úÎÖêÎì§:")
            print("   Ïù¥ Í∞úÎÖêÎì§ÏùÑ Neo4jÏóêÏÑú ÏÑ†ÏàòÍ∞úÎÖê Ï°∞ÌöåÌï† Ïàò ÏûàÏäµÎãàÎã§:")
            
            for concept in concepts:
                unit_code = concept.get('unitCode')
                unit_title = concept.get('unitTitle')
                print(f"   ‚úÖ {unit_code} ‚Üí {unit_title}")
            
            print(f"\nüîç Ïã§Ï†ú Îß§Ìïë ÏòàÏãú:")
            print("   ExpressÏóêÏÑú problemIdÎ•º Î≥¥ÎÇ¥Î©¥:")
            print("   1. MongoDBÏóêÏÑú unitId Ï°∞Ìöå")
            print("   2. concepts Ïª¨Î†âÏÖòÏóêÏÑú unitCode Ï°∞Ìöå")
            print("   3. Neo4jÏóêÏÑú Ìï¥Îãπ Í∞úÎÖêÏùò ÏÑ†ÏàòÍ∞úÎÖê Ï°∞Ìöå")
            
            # Íµ¨Ï≤¥Ï†ÅÏù∏ ÏòàÏãú
            example_concept = concepts[0]  # 3.1 ÏàúÏÑúÏåçÍ≥º Ï¢åÌëú
            unit_code = example_concept.get('unitCode')
            unit_title = example_concept.get('unitTitle')
            
            print(f"\nüìù ÏòàÏãú: {unit_code} {unit_title}")
            print(f"   Neo4j ÏøºÎ¶¨:")
            print(f"   MATCH (prereq:Concept)-[:PRECEDES]->(current:Concept {{concept: '{unit_title}'}})")
            print(f"   RETURN DISTINCT prereq.concept as concept, prereq.unit as unit, prereq.grade as grade")
            print(f"   ORDER BY prereq.unit ASC, prereq.concept ASC")
            
            client.close()
            
    except Exception as e:
        print(f"‚ùå Ïò§Î•ò Î∞úÏÉù: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_existing_concepts()
